<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_type = "control";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.rage_now = 0;
rage = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.t_unit = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(goblin_obj)
{
  with(goblin_obj)
  {move_towards_point(base_obj.x,base_obj.y,speed)}
}
if instance_exists(goldmine_obj)
{
  with (goldmine_obj)
  {
    if have_mine=false &amp;&amp; goblins_amount&gt;0 
    {alarm[5]=room_speed}
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.taxman=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//spawn r_lair
randomize();
chance = round(random(49));

if global.r_lair &lt; global.r_lair_max + round(random(1)) {
  //randomize();
  //spawn = round(random(2));

  //if spawn &lt; 1 {
  if chance &gt; 1 {
    //randomize();
    alarm[6] = room_speed; //global.r_lair_spawn / (10 + random(5));
  }
  else {
    //randomize();
    r_ind = 1 + round(random(global.g_mine - 1));
    xr_lair = (base_x + array_x[r_ind]) / 2;
    yr_lair = (base_y + array_y[r_ind]) / 2;
    
    if place_free (xr_lair,yr_lair) &amp;&amp; !collision_circle (xr_lair,yr_lair,m_lair_bord * 2,all,true,false) {
      instance_create (xr_lair,yr_lair,r_lair_obj);
      alarm[6] = room_speed; //global.r_lair_spawn;
    }
    else {
      alarm[6] = 1;
    }
  }
}
else {
    //randomize();
    alarm[6] = room_speed; //global.r_lair_spawn - round(random(30)) + round(random(30));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//summon village
x_spawn = round(random(room_width));
y_spawn = round(random(room_height));

if x_spawn &lt; mine_bord {
    x_spawn = mine_bord;
}

if x_spawn &gt; room_width - mine_bord {
    x_spawn = room_width - mine_bord;
}

if y_spawn &lt; mine_bord {
    y_spawn = mine_bord;
}

if y_spawn &gt; room_height - mine_bord {
    y_spawn = room_height - mine_bord;
}

if global.village &lt; 3 {
  
  if place_free(x_spawn,y_spawn) &amp;&amp; !collision_circle(x_spawn,y_spawn,mine_bord + 32,all,false,true) {
  instance_create(x_spawn,y_spawn,village_obj);
  alarm[3] = global.village_spawn*global.village;
  }
  else {
    alarm[3] = 1;
  }
}
else {
    alarm[3] = global.village_spawn * global.village;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//summon 2+ goldmine
randomize();

x_spawn = round(random(room_width)) - mine_bord;
y_spawn = round(random(room_height)) - mine_bord;

if x_spawn &lt; mine_bord {
    x_spawn = mine_bord;
}

if y_spawn &lt; mine_bord {
    y_spawn = mine_bord;
}

if global.g_mine &lt; 10 {

  if place_free(x_spawn,y_spawn) &amp;&amp; !collision_circle(x_spawn,y_spawn,mine_bord,all,true,false) {
    instance_create(x_spawn,y_spawn,goldmine_obj);
    array_x[global.g_mine] = x_spawn;
    array_y[global.g_mine] = y_spawn;
    alarm[2] = global.mine_time;
  }
  else {
    alarm[2] = 1;
  }
}
else {
    alarm[2] = room_speed; //global.mine_time;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//summon 1st goldmine
s_zone = 150;
up = round(random(1)); //0 - выше, 1 - ниже
dir = round(random(3)); //0 - left, 1 - up, 2 - right, 3 - down

if dir = 0 {
  switch (up) {
    case 0: instance_create((base_x - s_zone),(base_y - (s_zone / 2)),goldmine_obj); break;
    case 1: instance_create((base_x - s_zone),(base_y + (s_zone / 2)),goldmine_obj); break;
  }
}

if dir = 1 {
  switch (up) {
    case 0: instance_create((base_x - (s_zone / 2)),(base_y - s_zone),goldmine_obj); break;
    case 1: instance_create((base_x + (s_zone / 2)),(base_y - s_zone),goldmine_obj); break;
  }
}

if dir = 2 {
  switch (up) {
    case 0: instance_create((base_x + s_zone),(base_y - (s_zone / 2)),goldmine_obj); break;
    case 1: instance_create((base_x + s_zone),(base_y + (s_zone / 2)),goldmine_obj); break;
  }
}

if dir = 3 {
  switch (up) {
    case 0: instance_create((base_x-(s_zone/2)),(base_y+s_zone),goldmine_obj); break;
    case 1: instance_create((base_x+(s_zone/2)),(base_y+s_zone),goldmine_obj); break;
  }
}

array_x[1] = goldmine_obj.x;
array_y[1] = goldmine_obj.y;
alarm[2] = global.mine_time / 1 + random(1);
alarm[6] = room_speed; //global.r_lair_spawn;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//summon base
if global.base = false {
  base_x = round(random(room_width));
  base_y = round(random(room_height));
  
  if base_x &lt; base_bord {
    base_x = base_bord;
  }
  
  if base_x &gt; (room_width - base_bord) {
    base_x = (room_width - base_bord);
  }
  
  if base_y &lt; base_bord {
    base_y = base_bord;
  }
  
  if base_y &gt; (room_height - base_bord) {
    base_y = room_height - base_bord;
  }
  
  instance_create(base_x,base_y,base_obj);
  global.base = true;
  global.x_start = base_x;
  global.y_start = base_y;
  alarm[1] = room_speed * 3; //появился первый _рудник_
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.village = 0 {
    global.village_spawn = room_speed * (71 - random(13) + random(21));
}
else {
    global.village_spawn = room_speed * (71 * (sqrt(power(global.village,1.7))) - random(13) + random(21));
}



if global.gold &gt;= gold_to_win {
    room_goto(room_win);
}



if instance_exists(goldmine_obj) {
    global.miner = global.miner_free + instance_number(miner_obj);
    global.s_unit = global.s_free + goldmine_obj.defenders + instance_number(soldier_obj) + instance_number(soldier_village);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>level_control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize(); //эту команду нужно вызывать каждый раз, когда необходимо сменить последовательность рандома

//to win
gold_to_win = 2000 - (round(random(400) / 50) * 50) + (round(random(1000) / 50) * 50);


//miner
global.miner = 2;
global.miner_max = 20;
global.m_speed = 2.25;
global.miner_hp = 100;
global.m_work = 3; //сколько секунд нету рабочего
global.m_price = 30;
global.miner_free = global.miner;
global.gold_up = 30; //сколько золота приносим (сред. знач.)


//soldiers
global.s_minatk = 17;
global.s_maxatk = 23;
global.s_hp = 130;
global.s_unit = 2;
global.s_free = 2;
global.s_speed = 2.93;
global.soldier_price = 44;

//gold
global.g_mine = 0; //сколько сейчас голдмайнов, изнач. должно быть 0
global.goldmine_max = 11; //сколько макс. голдмайнов на карте
global.gold_max = 3000; //вместимость голдмайна
global.gold = 9; //денег изначально
global.mine_time = room_speed * (25 + round(random(9)));
mine_bord = 128; //радиус запрета появления голдмайнов


//base
global.base = false;
base_bord = 400; //борты от края карты
global.base_hp = 25; 

//village
global.village = 0;
global.village_spawn = room_speed * (42 + round(random(36)));
global.village_income = room_speed * (17 + round(random(12)));
global.village_s_income = room_speed * (9 + round(random(4)));


//taxman
global.t_unit = 1; //кол-во сорщиков
global.taxman_speed = 2.3;
global.taxman_hp = 720;
global.taxman_goldup = 96 + (round(random(65)));
global.taxman_resp = room_speed * 24;


//goblins - lairs
global.rage_max = 12; //сколько идет в атаку
/*
И фича и баг - гоблины, которые умирают в голдмайнах, не отнимают текущее значение рейджа.
В итоге получается, что в атаку всегда идет разное кол-во гоблинов.
На самом деле, весьма неплохо разнообразило геймплей.
*/
global.rage_now = 0;
rage = false;
global.m_lair = 0; //возле майнов
global.m_lair_max = global.g_mine;
global.r_lair = 0;
global.r_lair_max = 4;
global.r_lair_spawn = room_speed * (32 + round(random(40))); //на дорогах
global.gobspawn = room_speed * (45 + round(random(30)));
m_lair_bord = 30;


//goblin - units
global.goblinSpawn_amount = 5;
global.g_minatk = 44;
global.g_maxatk = 60;
global.g_hp = 60;
global.g_speed = 1.8;
global.g_inmine = 3; //макс. в 1 голдмайне
global.reward = 4;


//респы зданий
alarm[0] = 1; //появилась _база_
alarm[3] = global.village_spawn;


//UI
global.no_gold = false;
global.worker = 1; //поставь 1, чтобы по умолчанию были выбраны рабочие
global.soldier = 0; //поставь 1, чтобы по умолчанию были выбраны солдаты
global.tax = 0; //поставь 1, чтобы по умолчанию был выбран сборщик налогов
global.txt_speed = 2.3; //скорость улетания текста
global.top_text = 0; //кол-во строк сверху

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
