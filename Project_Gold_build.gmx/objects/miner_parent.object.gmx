<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = global.miner_hp;
spawn = true;
vis = true;
dir = 0;
m_speed = global.m_speed; 
gold_up_now = 0;
obj_type = "player_unit";

//global.miner += 1;

my_mine = instance_position(global.x_finish,global.y_finish,goldmine_obj);

x_start = base_obj.x;
y_start = base_obj.y;
x_finish = my_mine.x;
y_finish = my_mine.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt; 1 {
    dead_txt = instance_create(x,y,dead_obj)
    with (dead_txt) {
        myPapa = "miner"
    }
}

if instance_exists(my_mine) {
  my_mine.my_worker -= 1;
}

//global.miner-=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vis = true;
m_speed = global.m_speed;

if instance_exists(my_mine) {
  if distance_to_object(my_mine) &lt;= 1 /*m_speed * 2*/ {
    my_mine.gold -= gold_up_now;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt; 1 {
    instance_destroy();
}

if !instance_exists(my_mine) {
    if distance_to_object(base_obj) &lt;= 3 {
        global.miner_free += 1; 
        instance_destroy(); 
    }
   else {
        alarm[0] = -1;
        dir = 1;
        move_towards_point(x_start,y_start,m_speed);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(my_mine){
    if spawn = true {
        move_towards_point(x_finish,y_finish,m_speed);
}



if spawn = true &amp;&amp; distance_to_object(my_mine) &lt;= m_speed * 2 {
    spawn = false;
}

if my_mine.have_mine = false &amp;&amp; distance_to_object(my_mine) &lt;= 1 {
  hp = 0;
  instance_destroy();
}



if spawn = false {   
  if dir = 1 { //to base    
    if distance_to_object(base_obj) &lt;= 1 { //если мы подошли к базе
      m_speed = 0;
      vis = false;
      alarm[0] = room_speed * global.m_work / 2;
      global.gold += gold_up_now;
      txt = instance_create(x,y,gold_plus_obj);
      txt.gold_plus = gold_up_now;
      gold_up_now = 0;
      
      if !instance_exists(my_mine) || my_mine.have_mine = false {
        global.miner_free += 1;
        instance_destroy();
      }
      else {
        dir = 0;
      }
    }
    else {
        move_towards_point(x_start,y_start,m_speed);
    }
  }
  
  if dir = 0 { //to mine
    if instance_exists(my_mine) {   
      if distance_to_object(my_mine) &lt;= 1 { //если мы подошли к майну
        if my_mine.have_mine = true {
          vis = false;
          dir = 1;
          m_speed = 0;
          alarm[0] = room_speed * global.m_work;
          gold_up_now = global.gold_up - round(random(5)) + round(random(5));
        }
        else {
          hp = 0;
          instance_destroy();
        }
      }
      else {
        move_towards_point(x_finish,y_finish,m_speed);
      }
      
      if my_mine.have_mine = false &amp;&amp; distance_to_object(my_mine) &gt;= sqrt(sqr(x_finish - x_start) + sqr(y_finish - y_start)) / 1.5 || my_mine.my_worker &gt; 2 &amp;&amp; distance_to_object(my_mine) &lt;= 1 {
        dir = 1;
        move_towards_point(x_start,y_start,m_speed);
      }
    }
    else {
      dir = 1;
      move_towards_point(x_start,y_start,m_speed);
    }
  }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vis=true {m_speed=global.m_speed}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vis=true {m_speed=global.m_speed*1.25}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

if vis = true {
    draw_self();

        if dir = 0 { //to mine
            image_index = 1;
            image_angle = point_direction(x,y,x_finish,y_finish);
        }
    
        if dir = 1 { //to base
            image_angle = point_direction(x,y,x_start,y_start);
        
                if gold_up_now &gt; 0 {
                    image_index = 2;
                }
                else {
                    image_index = 1;
                }
        }
}
/*
  if gold_up_now &gt; 0 {
    //draw_sprite(miner_spr,1,x,y,);
    image_index = 0;
    image_angle = point_direction(x,y,x_start,y_start);
  }
  //if gold_up_now &lt;= 0 {
  else {
    //draw_sprite(miner_spr,0,x,y);
    image_index = 1;
    image_angle = point_direction(x,y,x_finish,y_finish);
  }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
