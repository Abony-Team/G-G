<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//variable's
g_hp = global.g_hp;
speed = global.g_speed;
global.rage_now += 1;
click = true;
nsf = true;
spawn = false;
agro = false;
atk = true;
target = base_obj;
obj_type = "goblin";

alarm[3] = 1;

//start move 
x_plus = round(random(1));
y_plus = round(random(1));

if x_plus = 0 {
    x_finish = x + 49 + round(random(32));
}
else {
    x_finish = x - 49 - round(random(32));
}

if y_plus = 0 {
    y_finish = y + 49 + round(random(32));
}
else {
    y_finish = y - 49 - round(random(32));
}

move_towards_point(x_finish,y_finish,speed);
dir = point_direction(x,y,x_finish,y_finish);

if global.rage_now &lt; global.rage_max {
    self_rage = false;
}
else {
    self_rage = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if myPapa = "lair" {
    my_lair = collision_circle(x,y,32,r_lair_obj,true,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nsf = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atk = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>click = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if g_hp &lt;= 0 {
    instance_destroy();
        if myPapa = "lair" {
            my_lair.goblin_amount -= 1;
        }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if collision_circle(x,y,64,miner_obj,true,false) {
    target = collision_circle(x,y,64,miner_obj,true,false);
    }
if collision_circle(x,y,64,soldier_obj,true,false) {
    target = collision_circle(x,y,64,soldier_obj,true,false);
}
if collision_circle(x,y,64,taxman_obj,true,false) {
    target = collision_circle(x,y,64,taxman_obj,true,false);
}
*/

var i;
for (i = 0; i &lt;= instance_count; i += 1) {
    var enemy;
    enemy = instance_id[i];
    
        if collision_circle(x,y,60,enemy,true,false) {
            
            if enemy.obj_type = "soldier" || enemy.obj_type = "miner" || enemy.obj_type = "taxman" {
                target = enemy;
                dir = point_direction(x,y,enemy.x,enemy.y);
            }
        }
}



if myPapa = "goldmine" {
    self_rage = true;
    move_towards_point(base_obj.x,base_obj.y,speed);
    dir = point_direction(x,y,base_obj.x,base_obj.y);
}
else {
    
    //if myPapa = "lair" {
        
        if spawn = false &amp;&amp; distance_to_point(x_finish,y_finish) &lt; 3 {
            speed = 0;
            spawn = true;
            agro = false;
        }
        
        if spawn = true {
            
            if !instance_exists(target) {
                    agro = false;
                    speed = global.g_speed;
                    move_towards_point(x_finish,y_finish,speed);
                    dir = point_direction(x,y,x_finish,y_finish);
                }
            if distance_to_point(x_finish,y_finish) &lt; 3 &amp;&amp; agro = false {
                speed = 0;
            }
                
            if agro = false {
                
                if collision_circle(x,y,60,target,true,false) {
                    agro = true;
                }
            }
            else {
                
                if distance_to_object(target) &gt; 1 {
                    
                    if distance_to_point(x_finish,y_finish) &gt; 72 {
                        agro = false;
                        speed = global.g_speed;
                        move_towards_point (x_finish,y_finish,speed);
                        dir = point_direction(x,y,x_finish,y_finish);
                    }
                    else {
                        speed = global.g_speed;
                        move_towards_point(target.x,target.y,speed);
                        dir = point_direction(x,y,target.x,target.y);
                    }
                }
                else {
                    speed = 0;
                    
                    if !target = base_obj &amp;&amp; !target.obj_type = "soldier" {
                    
                        if target.vis = true &amp;&amp; atk = true {
                            target.hp -= (global.g_minatk+round(random(global.g_maxatk-global.g_minatk)));
                            atk = false;
                            alarm[1] = room_speed*1.8; //скорость атаки гоблинов
              
                                if target.hp &lt; 1 || target.vis = false {
                                    agro = false;
                                }
                        }
                    }
                    
                    if target.obj_type = "soldier" &amp;&amp; atk = true {
                        target.hp -= (global.g_minatk+round(random(global.g_maxatk-global.g_minatk)));
                        atk = false;
                        alarm[1] = room_speed*1.8; //скорость атаки гоблинов
                                            
                        if target.hp &lt; 1 {
                            agro = false;
                        }
                    }
                }
            }
        }
    //}
    if global.rage_now &gt;= global.rage_max {
        self_rage = true;
        
            if instance_exists (base_obj) {
                speed = global.g_speed;
                target = base_obj;
                move_towards_point(target.x,target.y,speed);
                dir = point_direction(x,y,target.x,target.y);
            }
    }
}
/*
if global.rage_now &lt; global.rage_max &amp;&amp; self_rage = false {
    
    if spawn = false {
    
        if distance_to_point(x_finish,y_finish) &lt; 5 {
            speed = 0;
            spawn = true;
            agro = false;
        }    
    }
  
    if spawn = true {
    
        if agro = false &amp;&amp; collision_circle(x,y,64,target,true,false) &amp;&amp; distance_to_point(x_finish,y_finish) &lt;= 5 {
            agro = true;
        }
        
        if agro = false &amp;&amp; distance_to_point(x_finish,y_finish) &gt; 5 {
            speed = global.g_speed;
            move_towards_point(x_finish,y_finish,speed);
        }
        
        if distance_to_point(x_finish,y_finish) &lt; 5 &amp;&amp; !collision_circle(x,y,60,target,true,false) {
            speed = 0;
            agro = false;
        }
         
            if agro=true {
            
            if distance_to_point(x_finish,y_finish) &gt;= 72 {
                agro = false;
                move_towards_point(x_finish,y_finish,speed);
            }
            
            if collision_circle(x,y,48,target,true,false) { //радиус агрессии
                speed = global.g_speed;
                move_towards_point(target.x,target.y,speed);
                
                    if distance_to_object(target) &lt; 8 {
                        speed = 0;
          
                            if atk=true {
          
                                    if !enemy.obj_type = "soldier" {
                                    
                                        if target.vis = true {
                                            target.hp -= (global.g_minatk+round(random(global.g_maxatk-global.g_minatk)));
                                            atk = false
                                            alarm[1] = room_speed*1.8; //скорость атаки гоблинов
              
                                                if target.hp &lt; 1 {
                                                    agro = false;
                                                }
                                        }
                                        else {
                                            agro = false;
                                        } 
                                    }
                                    else {
                                        target.hp -= (global.g_minatk+round(random(global.g_maxatk-global.g_minatk)));
                                        atk = false;
                                        alarm[1] = room_speed*1.8; //скорость атаки гоблинов
                                            
                                            if target.hp &lt; 1 {
                                                agro = false;
                                            }
                                    }
                            }
                    }
                    else {
                        speed = global.g_speed;
                    }
            }
            else {
                agro = false;
            } 
        }
    }
}
else if global.rage_now &gt;= global.rage_max
{
  self_rage = true;
  
  if instance_exists(base_obj) {
    speed = global.g_speed;
    move_towards_point(base_obj.x,base_obj.y,speed);
  }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="base_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.s_free &gt; 0 {
    global.s_free -= 1;
    g_hp -= global.g_hp;
}
else {
    g_hp -= global.g_hp;
    base_obj.hp -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.soldier = 1 {

    if click = true {
        
        if global.s_free &gt; 0 {
            global.x_finish = x;
            global.y_finish = y;
            instance_create(base_obj.x,base_obj.y,soldier_obj);
            global.s_free -= 1;
            click = false;
            alarm[0] = room_speed / 2; //click alarm
        }
        else {
        
            if global.gold &gt;= global.soldier_price {
                global.x_finish = x;
                global.y_finish = y;
                instance_create(base_obj.x,base_obj.y,soldier_obj);
                global.gold -= global.soldier_price;
                txt = instance_create(base_obj.x,base_obj.y,gold_minus_obj);
                txt.gold_minus = global.soldier_price;
                click = false;
                alarm[0] = room_speed / 2; //click alarm
            }
            else if global.no_gold = false {
                text = instance_create(room_width / 2,0,top_text_control);
                text.myPapa = "Soldier";
                text.txt = "Need more gold!";
            }
        }
    }
    else if nsf = true {
        nsf = false;
        alarm[2] = room_speed / 2; //"not so fast" alarm
        instance_create(x,y,nsf_obj);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_alpha(1);
image_angle = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
