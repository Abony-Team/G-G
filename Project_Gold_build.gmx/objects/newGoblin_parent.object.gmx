<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stats
obj_type = "enemy";
g_hp = global.g_hp;
speed = global.g_speed;
min_atk = global.g_minatk;
max_atk = global.g_maxatk;
a = 0;
click = true;
nsf = true;
atk = true;

if collision_circle(x,y,64,r_lair_obj,true,false) {
    myPapa = "lair";
}
else {
    myPapa = "control";
}

//for lair
if myPapa = "lair" {
    x_plus = round(random(1));
    y_plus = round(random(1));

        if x_plus = 0 {
            x_finish = x + 49 + round(random(32));
        }
        else {
            x_finish = x - 49 - round(random(32));
        }

        if y_plus = 0 {
            y_finish = y + 49 + round(random(32));
        }
        else {
            y_finish = y - 49 - round(random(32));
        }

    move_towards_point(x_finish,y_finish,speed);
}
else {
    //target
    randomize();
    var z;
    z = round(random(global.a));
    myTarget = global.target_array[z];
    move_towards_point(myTarget.x,myTarget.y,speed);
}

//for control
//global.rage_now += 1;

if !place_empty(x,y) {
    var d,step;
    step = 8;
    for (d = 0; d &gt;= 0; d += 1) {
        if !place_empty(x,y) {    
            randomize();
            XX = round(random(1));
            YY = round(random(1));
        
                if XX = 0 {
                    
                    if YY = 0 {
                        x += step;
                        y += step;
                    }
                    else {
                        x += step;
                        y -= step;
                    }
                }
                else {
                    
                    if YY = 0 {
                        x -= step;
                        y += step;
                    }
                    else {
                        x -= step;
                        y -= step;
                    }
                }
        }
        else {
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.rage_now -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nsf = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atk = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>click = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>0 HP</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if g_hp &lt;= 0 {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Road and agro</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if myPapa = "control" {
    //Надо посмотреть все объекты в радиусе 64
    //Отсортировать их по obj_type
    //Выбрать тех, у кого "player_unit"
    //Найти ближайшего из них
    //Выбрать его своей целью
    //Далее идем к цели и поворачиваемся к ней, если рядом, то стоим и бьем, если нет, то идем к ней
    if collision_circle(x,y,64,other,true,false) {
       var i;
       for (i = 0; i &gt;= 0; i += 1) {
            units = instance_id[i];
            
                if units.obj_type = "player_unit" {
                    myEnemy = units;
                    break;
                }
       }
       
       if distance_to_object(myEnemy) &gt; 1 {
           move_towards_point(myEnemy.x,myEnemy.y,speed);
       }
       else {
           
       }
}

if myPapa = "lair" {
    if collision_circle(x,y,64,all,true,false) &amp;&amp; instance_nearest(x,y,all).obj_type = "player_unit" {
        myEnemy = instance_nearest(x,y,all);//collision_circle(x,y,32,other,true,false).object_index;
        move_towards_point(myEnemy.x,myEnemy.y,speed);
        agro = true;
        
        if myEnemy.vis = true &amp;&amp; atk = true &amp;&amp; distance_to_object(myEnemy) &lt; 1 { 
            myEnemy.hp -= global.g_minatk + round(random(global.g_maxatk - global.g_minatk));
            atk = false;
            alarm[1] = room_speed * 1.8; //скорость атаки гоблинов
              
                if myEnemy.hp &lt; 1 || myEnemy.vis = false {
                    agro = false;
                    move_towards_point(myTarget.x,myTarget.y,speed);
                }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Destroy trigger</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(base_obj) &lt; 1 {
    base_obj.hp -= 1;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Goldmine</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if myTarget.obj_type = "goldmine" &amp;&amp; distance_to_object(myTarget) &lt; 1 {
    
    if myTarget.defenders &lt;= 0 &amp;&amp; myTarget.have_mine = true {
        myTarget.have_mine = false;
        myTarget.goblins_amount += 1;
        instance_destroy();
    }
    else {
        
        if myTarget.defenders &gt; 0 {
           myTarget.defenders -= 1;
           instance_destroy(); 
        }
        
        if myTarget.have_mine = false {
            myTarget.goblins_amount += 1;
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.soldier = 1 {

    if click = true {
        
        if global.s_free &gt; 0 {
            global.x_finish = x;
            global.y_finish = y;
            instance_create(base_obj.x,base_obj.y,soldier_obj);
            click = false;
            alarm[0] = room_speed / 2; //click alarm
        }
        else {
        
            if global.gold &gt;= global.soldier_price {
                global.x_finish = x;
                global.y_finish = y;
                instance_create(base_obj.x,base_obj.y,soldier_obj);
                global.gold -= global.soldier_price;
                txt = instance_create(base_obj.x,base_obj.y,gold_minus_obj);
                txt.gold_minus = global.soldier_price;
                click = false;
                alarm[0] = room_speed / 2; //click alarm
            }
            else if global.no_gold = false {
                text = instance_create(room_width / 2,0,top_text_control);
                text.myPapa = "Soldier";
                text.txt = "Need more gold!";
            }
        }
    }
    else if nsf = true {
        nsf = false;
        alarm[2] = room_speed / 2; //"not so fast" alarm
        instance_create(x,y,nsf_obj);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_self();
image_index = 0;
image_angle = point_direction(x,y,myTarget.x,myTarget.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
